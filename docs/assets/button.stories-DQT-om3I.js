import{j as n}from"./index--3LzUWva.js";import{c as v}from"./utils-CRj-7yvG.js";import{g,C as t,a as s}from"./stories-lCcU3Zw5.js";const e=({type:c="button",variant:l=null,size:a=null,className:u="",onClick:r,children:h,...x})=>{var o,d;const i=g(),m=l?((o=i==null?void 0:i.Button)==null?void 0:o[l])??"":"",j=a?((d=i==null?void 0:i.ButtonSize)==null?void 0:d[a])??"":"",p=B=>{r&&r(B)};return n.jsx("button",{type:c,onClick:p,className:v(m,j,u),...x,children:h??"Click me"})},y=()=>n.jsxs("main",{className:"container",children:[n.jsx("h1",{children:"Primary Button"}),n.jsx("span",{className:"current-mapping",children:t}),n.jsx("h2",{children:"Props"}),n.jsxs("ul",{className:"props-list",children:[n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"type?"}),": 'button' | 'submit' | 'reset"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"variant?"}),": 'primary' | 'primaryOutline'"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"size?"}),": 'sm' | 'md' | 'lg' | null | undefined"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"onClick?"}),": (event: React.MouseEvent","<HTMLButtonElement>",") =",">"," void"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"className?"}),": string (defaults to: '')"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"children?"}),": React.ReactNode"]})]}),n.jsx("h2",{children:"Examples: Filled"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"primary",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="primary" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"primary",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="primary" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"primary",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="primary" size="lg">Large Button</Button>'})]}),n.jsx("h2",{children:"Examples: Outline"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"primaryOutline",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="primaryOutline" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"primaryOutline",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="primaryOutline" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"primaryOutline",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="primaryOutline" size="lg">Large Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h2",{children:"Note"}),n.jsx("p",{children:"If you choose the 'vanilla' variant mapping, the buttons will be rendered using the Bootstrap class names (so you can style it accordingly). For example:"}),n.jsx(s,{style:{marginTop:"0.5rem"},showCopyButton:!1,code:`<button type="button" class="btn btn-primary btn-sm">
  Small Button
</button>`})]})]}),N=()=>n.jsxs("main",{className:"container",children:[n.jsx("h1",{children:"Secondary Button"}),n.jsx("span",{className:"current-mapping",children:t}),n.jsx("h2",{children:"Props"}),n.jsxs("ul",{className:"props-list",children:[n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"type?"}),": 'button' | 'submit' | 'reset"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"variant?"}),": 'secondary' | 'secondaryOutline'"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"size?"}),": 'sm' | 'md' | 'lg' | null | undefined"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"onClick?"}),": (event: React.MouseEvent","<HTMLButtonElement>",") =",">"," void"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"className?"}),": string (defaults to: '')"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"children?"}),": React.ReactNode"]})]}),n.jsx("h2",{children:"Examples: Filled"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"secondary",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="secondary" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"secondary",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="secondary" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"secondary",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="secondary" size="lg">Large Button</Button>'})]}),n.jsx("h2",{children:"Examples: Outline"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"secondaryOutline",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="secondaryOutline" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"secondaryOutline",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="secondaryOutline" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"secondaryOutline",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="secondaryOutline" size="lg">Large Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h2",{children:"Note"}),n.jsx("p",{children:"If you choose the 'vanilla' variant mapping, the buttons will be rendered using the Bootstrap class names (so you can style it accordingly). For example:"}),n.jsx(s,{style:{marginTop:"0.5rem"},showCopyButton:!1,code:`<button type="button" class="btn btn-secondary btn-sm">
  Small Button
</button>`})]})]}),z=()=>n.jsxs("main",{className:"container",children:[n.jsx("h1",{children:"Info Button"}),n.jsx("span",{className:"current-mapping",children:t}),n.jsx("h2",{children:"Props"}),n.jsxs("ul",{className:"props-list",children:[n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"type?"}),": 'button' | 'submit' | 'reset"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"variant?"}),": 'info' | 'infoOutline'"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"size?"}),": 'sm' | 'md' | 'lg' | null | undefined"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"onClick?"}),": (event: React.MouseEvent","<HTMLButtonElement>",") =",">"," void"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"className?"}),": string (defaults to: '')"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"children?"}),": React.ReactNode"]})]}),n.jsx("h2",{children:"Examples: Filled"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"info",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="info" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"info",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="info" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"info",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="info" size="lg">Large Button</Button>'})]}),n.jsx("h2",{children:"Examples: Outline"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"infoOutline",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="infoOutline" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"infoOutline",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="infoOutline" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"infoOutline",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="infoOutline" size="lg">Large Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h2",{children:"Note"}),n.jsx("p",{children:"If you choose the 'vanilla' variant mapping, the buttons will be rendered using the Bootstrap class names (so you can style it accordingly). For example:"}),n.jsx(s,{style:{marginTop:"0.5rem"},showCopyButton:!1,code:`<button type="button" class="btn btn-info btn-sm">
  Small Button
</button>`})]})]}),b=()=>n.jsxs("main",{className:"container",children:[n.jsx("h1",{children:"Success Button"}),n.jsx("span",{className:"current-mapping",children:t}),n.jsx("h2",{children:"Props"}),n.jsxs("ul",{className:"props-list",children:[n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"type?"}),": 'button' | 'submit' | 'reset"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"variant?"}),": 'success' | 'successOutline'"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"size?"}),": 'sm' | 'md' | 'lg' | null | undefined"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"onClick?"}),": (event: React.MouseEvent","<HTMLButtonElement>",") =",">"," void"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"className?"}),": string (defaults to: '')"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"children?"}),": React.ReactNode"]})]}),n.jsx("h2",{children:"Examples: Filled"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"success",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="success" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"success",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="success" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"success",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="success" size="lg">Large Button</Button>'})]}),n.jsx("h2",{children:"Examples: Outline"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"successOutline",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="successOutline" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"successOutline",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="successOutline" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"successOutline",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="successOutline" size="lg">Large Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h2",{children:"Note"}),n.jsx("p",{children:"If you choose the 'vanilla' variant mapping, the buttons will be rendered using the Bootstrap class names (so you can style it accordingly). For example:"}),n.jsx(s,{style:{marginTop:"0.5rem"},showCopyButton:!1,code:`<button type="button" class="btn btn-success btn-sm">
  Small Button
</button>`})]})]}),S=()=>n.jsxs("main",{className:"container",children:[n.jsx("h1",{children:"Warning Button"}),n.jsx("span",{className:"current-mapping",children:t}),n.jsx("h2",{children:"Props"}),n.jsxs("ul",{className:"props-list",children:[n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"type?"}),": 'button' | 'submit' | 'reset"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"variant?"}),": 'warning' | 'warningOutline'"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"size?"}),": 'sm' | 'md' | 'lg' | null | undefined"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"onClick?"}),": (event: React.MouseEvent","<HTMLButtonElement>",") =",">"," void"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"className?"}),": string (defaults to: '')"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"children?"}),": React.ReactNode"]})]}),n.jsx("h2",{children:"Examples: Filled"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"warning",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="warning" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"warning",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="warning" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"warning",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="warning" size="lg">Large Button</Button>'})]}),n.jsx("h2",{children:"Examples: Outline"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"warningOutline",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="warningOutline" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"warningOutline",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="warningOutline" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"warningOutline",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="warningOutline" size="lg">Large Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h2",{children:"Note"}),n.jsx("p",{children:"If you choose the 'vanilla' variant mapping, the buttons will be rendered using the Bootstrap class names (so you can style it accordingly). For example:"}),n.jsx(s,{style:{marginTop:"0.5rem"},showCopyButton:!1,code:`<button type="button" class="btn btn-warning btn-sm">
  Small Button
</button>`})]})]}),M=()=>n.jsxs("main",{className:"container",children:[n.jsx("h1",{children:"Danger Button"}),n.jsx("span",{className:"current-mapping",children:t}),n.jsx("h2",{children:"Props"}),n.jsxs("ul",{className:"props-list",children:[n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"type?"}),": 'button' | 'submit' | 'reset"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"variant?"}),": 'danger' | 'dangerOutline'"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"size?"}),": 'sm' | 'md' | 'lg' | null | undefined"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"onClick?"}),": (event: React.MouseEvent","<HTMLButtonElement>",") =",">"," void"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"className?"}),": string (defaults to: '')"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"children?"}),": React.ReactNode"]})]}),n.jsx("h2",{children:"Examples: Filled"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"danger",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="danger" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"danger",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="danger" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"danger",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="danger" size="lg">Large Button</Button>'})]}),n.jsx("h2",{children:"Examples: Outline"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"dangerOutline",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="dangerOutline" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"dangerOutline",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="dangerOutline" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"dangerOutline",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="dangerOutline" size="lg">Large Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h2",{children:"Note"}),n.jsx("p",{children:"If you choose the 'vanilla' variant mapping, the buttons will be rendered using the Bootstrap class names (so you can style it accordingly). For example:"}),n.jsx(s,{style:{marginTop:"0.5rem"},showCopyButton:!1,code:`<button type="button" class="btn btn-danger btn-sm">
  Small Button
</button>`})]})]}),O=()=>n.jsxs("main",{className:"container",children:[n.jsx("h1",{children:"Light Button"}),n.jsx("span",{className:"current-mapping",children:t}),n.jsx("h2",{children:"Props"}),n.jsxs("ul",{className:"props-list",children:[n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"type?"}),": 'button' | 'submit' | 'reset"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"variant?"}),": 'light' | 'lightOutline'"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"size?"}),": 'sm' | 'md' | 'lg' | null | undefined"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"onClick?"}),": (event: React.MouseEvent","<HTMLButtonElement>",") =",">"," void"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"className?"}),": string (defaults to: '')"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"children?"}),": React.ReactNode"]})]}),n.jsx("h2",{children:"Examples: Filled"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"light",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="light" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"light",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="light" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"light",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="light" size="lg">Large Button</Button>'})]}),n.jsx("h2",{children:"Examples: Outline"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"lightOutline",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="lightOutline" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"lightOutline",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="lightOutline" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"lightOutline",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="lightOutline" size="lg">Large Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h2",{children:"Note"}),n.jsx("p",{children:"If you choose the 'vanilla' variant mapping, the buttons will be rendered using the Bootstrap class names (so you can style it accordingly). For example:"}),n.jsx(s,{style:{marginTop:"0.5rem"},showCopyButton:!1,code:`<button type="button" class="btn btn-light btn-sm">
  Small Button
</button>`})]})]}),L=()=>n.jsxs("main",{className:"container",children:[n.jsx("h1",{children:"Dark Button"}),n.jsx("span",{className:"current-mapping",children:t}),n.jsx("h2",{children:"Props"}),n.jsxs("ul",{className:"props-list",children:[n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"type?"}),": 'button' | 'submit' | 'reset"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"variant?"}),": 'dark' | 'darkOutline'"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"size?"}),": 'sm' | 'md' | 'lg' | null | undefined"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"onClick?"}),": (event: React.MouseEvent","<HTMLButtonElement>",") =",">"," void"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"className?"}),": string (defaults to: '')"]}),n.jsxs("li",{children:[n.jsx("span",{className:"prop",children:"children?"}),": React.ReactNode"]})]}),n.jsx("h2",{children:"Examples: Filled"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"dark",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="dark" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"dark",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="dark" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"dark",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="dark" size="lg">Large Button</Button>'})]}),n.jsx("h2",{children:"Examples: Outline"}),n.jsxs("div",{children:[n.jsx("h4",{children:"Small Button"}),n.jsx(e,{variant:"darkOutline",size:"sm",children:"Small Button"}),n.jsx(s,{code:'<Button variant="darkOutline" size="sm">Small Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Medium Button"}),n.jsx(e,{variant:"darkOutline",size:"md",children:"Medium Button"}),n.jsx(s,{code:'<Button variant="darkOutline" size="md">Medium Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h4",{children:"Large Button"}),n.jsx(e,{variant:"darkOutline",size:"lg",children:"Large Button"}),n.jsx(s,{code:'<Button variant="darkOutline" size="lg">Large Button</Button>'})]}),n.jsxs("div",{children:[n.jsx("h2",{children:"Note"}),n.jsx("p",{children:"If you choose the 'vanilla' variant mapping, the buttons will be rendered using the Bootstrap class names (so you can style it accordingly). For example:"}),n.jsx(s,{style:{marginTop:"0.5rem"},showCopyButton:!1,code:`<button type="button" class="btn btn-dark btn-sm">
  Small Button
</button>`})]})]}),f=()=>n.jsx(y,{});f.storyName="01 Primary";const w=()=>n.jsx(N,{});w.storyName="02 Secondary";const E=()=>n.jsx(b,{});E.storyName="03 Success";const k=()=>n.jsx(M,{});k.storyName="04 Danger";const R=()=>n.jsx(S,{});R.storyName="05 Warning";const C=()=>n.jsx(z,{});C.storyName="06 Info";const T=()=>n.jsx(O,{});T.storyName="07 Light";const F=()=>n.jsx(L,{});F.storyName="08 Dark";typeof window<"u"&&window.document&&window.document.createElement&&document.documentElement.setAttribute("data-storyloaded","");export{k as Danger,F as Dark,C as Info,T as Light,f as Primary,w as Secondary,E as Success,R as Warning};
